#!/usr/bin/env node
"use strict";function handleArguments(e){versionFlag&&0===tasks.length&&(gutil.log("CLI version",cliPackage.version),e.modulePackage&&"undefined"!=typeof e.modulePackage.version&&gutil.log("Local version",e.modulePackage.version),process.exit(0)),e.modulePath||(gutil.log(chalk.red("Local gulp not found in"),chalk.magenta(tildify(e.cwd))),gutil.log(chalk.red("Try running: npm install gulp")),process.exit(1)),e.configPath||(gutil.log(chalk.red("No gulpfile found")),process.exit(1)),semver.gt(cliPackage.version,e.modulePackage.version)&&(gutil.log(chalk.red("Warning: gulp version mismatch:")),gutil.log(chalk.red("Global gulp is",cliPackage.version)),gutil.log(chalk.red("Local gulp is",e.modulePackage.version))),process.cwd()!==e.cwd&&(process.chdir(e.cwd),gutil.log("Working directory changed to",chalk.magenta(tildify(e.cwd)))),require(e.configPath),gutil.log("Using gulpfile",chalk.magenta(tildify(e.configPath)));var a=require(e.modulePath);logEvents(a),process.nextTick(function(){return simpleTasksFlag?logTasksSimple(e,a):tasksFlag?logTasks(e,a):void a.start.apply(a,toRun)})}function logTasks(e,a){var r=taskTree(a.tasks);r.label="Tasks for "+chalk.magenta(tildify(e.configPath)),archy(r).split("\n").forEach(function(e){0!==e.trim().length&&gutil.log(e)})}function logTasksSimple(e,a){console.log(Object.keys(a.tasks).join("\n").trim())}function formatError(e){return e.err?"boolean"==typeof e.err.showStack?e.err.toString():e.err.stack?e.err.stack:new Error(String(e.err)).stack:e.message}function logEvents(e){e.on("err",function(){failed=!0}),e.on("task_start",function(e){gutil.log("Starting","'"+chalk.cyan(e.task)+"'...")}),e.on("task_stop",function(e){var a=prettyTime(e.hrDuration);gutil.log("Finished","'"+chalk.cyan(e.task)+"'","after",chalk.magenta(a))}),e.on("task_err",function(e){var a=formatError(e),r=prettyTime(e.hrDuration);gutil.log("'"+chalk.cyan(e.task)+"'",chalk.red("errored after"),chalk.magenta(r)),gutil.log(a)}),e.on("task_not_found",function(e){gutil.log(chalk.red("Task '"+e.task+"' is not in your gulpfile")),gutil.log("Please check the documentation for proper gulpfile formatting"),process.exit(1)})}var gutil=require("gulp-util"),prettyTime=require("pretty-hrtime"),chalk=require("chalk"),semver=require("semver"),archy=require("archy"),Liftoff=require("liftoff"),tildify=require("tildify"),interpret=require("interpret"),v8flags=require("v8flags"),completion=require("../lib/completion"),argv=require("minimist")(process.argv.slice(2)),taskTree=require("../lib/taskTree");process.env.INIT_CWD=process.cwd();var cli=new Liftoff({name:"gulp",completions:completion,extensions:interpret.jsVariants,v8flags:v8flags}),failed=!1;process.once("exit",function(e){0===e&&failed&&process.exit(1)});var cliPackage=require("../package"),versionFlag=argv.v||argv.version,tasksFlag=argv.T||argv.tasks,tasks=argv._,toRun=tasks.length?tasks:["default"],simpleTasksFlag=argv["tasks-simple"],shouldLog=!argv.silent&&!simpleTasksFlag;shouldLog||(gutil.log=function(){}),cli.on("require",function(e){gutil.log("Requiring external module",chalk.magenta(e))}),cli.on("requireFail",function(e){gutil.log(chalk.red("Failed to load external module"),chalk.magenta(e))}),cli.on("respawn",function(e,a){var r=chalk.magenta(e.join(", ")),i=chalk.magenta(a.pid);gutil.log("Node flags detected:",r),gutil.log("Respawned to PID:",i)}),cli.launch({cwd:argv.cwd,configPath:argv.gulpfile,require:argv.require,completion:argv.completion},handleArguments);
//# sourceMappingURL=gulp.js.map
