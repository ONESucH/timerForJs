{"version":3,"sources":["scripts/additionalFilesSites/portfolio-Kreative-Pixel/vendor/gulp/test/dest.js"],"names":["gulp","require","should","join","rimraf","fs","outpath","__dirname","describe","t","e","o","src","i","pipe","dest","on","exist","path","equal","exists","be","ok","beforeEach","bind","afterEach","it","contents","String","readFile","not","read","buffer"],"mappings":"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","file":"dest.js","sourcesContent":["\"use strict\";var gulp=require(\"../\"),should=require(\"should\"),join=require(\"path\").join,rimraf=require(\"rimraf\"),fs=require(\"graceful-fs\");require(\"mocha\");var outpath=join(__dirname,\"./out-fixtures\");describe(\"gulp output stream\",function(){describe(\"dest()\",function(){function t(t,e){var o=gulp.src(join(__dirname,\"./fixtures/stuff\"),t),i=o.pipe(gulp.dest(outpath));i.on(\"error\",e),i.on(\"data\",function(t){should.exist(t),should.exist(t.path),join(t.path,\"\").should.equal(join(outpath,\"./stuff\"))}),i.on(\"end\",function(){fs.exists(join(outpath,\"stuff\"),function(t){should(t).be.ok,e()})})}beforeEach(rimraf.bind(null,outpath)),afterEach(rimraf.bind(null,outpath)),it(\"should return a stream\",function(t){var e=gulp.dest(join(__dirname,\"./fixtures/\"));should.exist(e),should.exist(e.on),t()}),it(\"should return a output stream that writes files\",function(t){var e=gulp.src(join(__dirname,\"./fixtures/**/*.txt\")),o=gulp.dest(outpath);e.pipe(o),o.on(\"error\",t),o.on(\"data\",function(t){should.exist(t),should.exist(t.path),should.exist(t.contents),join(t.path,\"\").should.equal(join(outpath,\"./copy/example.txt\")),String(t.contents).should.equal(\"this is a test\")}),o.on(\"end\",function(){fs.readFile(join(outpath,\"copy\",\"example.txt\"),function(e,o){should.not.exist(e),should.exist(o),String(o).should.equal(\"this is a test\"),t()})})}),it(\"should return a output stream that does not write non-read files\",function(t){var e=gulp.src(join(__dirname,\"./fixtures/**/*.txt\"),{read:!1}),o=gulp.dest(outpath);e.pipe(o),o.on(\"error\",t),o.on(\"data\",function(t){should.exist(t),should.exist(t.path),should.not.exist(t.contents),join(t.path,\"\").should.equal(join(outpath,\"./copy/example.txt\"))}),o.on(\"end\",function(){fs.readFile(join(outpath,\"copy\",\"example.txt\"),function(e,o){should.exist(e),should.not.exist(o),t()})})}),it(\"should return a output stream that writes streaming files\",function(t){var e=gulp.src(join(__dirname,\"./fixtures/**/*.txt\"),{buffer:!1}),o=e.pipe(gulp.dest(outpath));o.on(\"error\",t),o.on(\"data\",function(t){should.exist(t),should.exist(t.path),should.exist(t.contents),join(t.path,\"\").should.equal(join(outpath,\"./copy/example.txt\"))}),o.on(\"end\",function(){fs.readFile(join(outpath,\"copy\",\"example.txt\"),function(e,o){should.not.exist(e),should.exist(o),String(o).should.equal(\"this is a test\"),t()})})}),it(\"should return a output stream that writes streaming files into new directories\",function(e){t({},e)}),it(\"should return a output stream that writes streaming files into new directories (buffer: false)\",function(e){t({buffer:!1},e)}),it(\"should return a output stream that writes streaming files into new directories (read: false)\",function(e){t({read:!1},e)}),it(\"should return a output stream that writes streaming files into new directories (read: false, buffer: false)\",function(e){t({buffer:!1,read:!1},e)})})});\n//# sourceMappingURL=dest.js.map\n"]}