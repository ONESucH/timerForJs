"use strict";var gulp=require("../"),Q=require("q"),should=require("should");require("mocha"),describe("gulp tasks",function(){describe("task()",function(){it("should define a task",function(u){var t;t=function(){},gulp.task("test",t),should.exist(gulp.tasks.test),gulp.tasks.test.fn.should.equal(t),gulp.reset(),u()})}),describe("run()",function(){it("should run multiple tasks",function(u){var t,s,l;t=0,s=function(){this.should.equal(gulp),++t},l=function(){this.should.equal(gulp),++t},gulp.task("test",s),gulp.task("test2",l),gulp.run("test","test2"),t.should.equal(2),gulp.reset(),u()}),it("should run all tasks when call run() multiple times",function(u){var t,s,l;t=0,s=function(){this.should.equal(gulp),++t},l=function(){this.should.equal(gulp),++t},gulp.task("test",s),gulp.task("test2",l),gulp.run("test"),gulp.run("test2"),t.should.equal(2),gulp.reset(),u()}),it("should run all async promise tasks",function(u){var t,s,l;t=0,s=function(){var u=Q.defer();return setTimeout(function(){++t,u.resolve()},1),u.promise},l=function(){var u=Q.defer();return setTimeout(function(){++t,u.resolve()},1),u.promise},gulp.task("test",s),gulp.task("test2",l),gulp.run("test"),gulp.run("test2",function(){gulp.isRunning.should.equal(!1),t.should.equal(2),gulp.reset(),u()}),gulp.isRunning.should.equal(!0)}),it("should run all async callback tasks",function(u){var t,s,l;t=0,s=function(u){setTimeout(function(){++t,u(null)},1)},l=function(u){setTimeout(function(){++t,u(null)},1)},gulp.task("test",s),gulp.task("test2",l),gulp.run("test"),gulp.run("test2",function(){gulp.isRunning.should.equal(!1),t.should.equal(2),gulp.reset(),u()}),gulp.isRunning.should.equal(!0)}),it("should emit task_not_found and throw an error when task is not defined",function(u){gulp.on("task_not_found",function(t){should.exist(t),should.exist(t.task),t.task.should.equal("test"),gulp.reset(),u()});try{gulp.run("test")}catch(u){should.exist(u)}}),it("should run task scoped to gulp",function(u){var t,s;t=0,s=function(){this.should.equal(gulp),++t},gulp.task("test",s),gulp.run("test"),t.should.equal(1),gulp.isRunning.should.equal(!1),gulp.reset(),u()}),it("should run default task scoped to gulp",function(u){var t,s;t=0,s=function(){this.should.equal(gulp),++t},gulp.task("default",s),gulp.run(),t.should.equal(1),gulp.isRunning.should.equal(!1),gulp.reset(),u()})})});
//# sourceMappingURL=tasks.js.map
